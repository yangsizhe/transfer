import numpy as np
from scipy.spatial.transform import Rotation as R

def rotation_matrix_to_vector(rotation_matrix):
    r = R.from_matrix(rotation_matrix)
    return r.as_rotvec()

def rotation_vector_to_matrix(rotation_vector):
    r = R.from_rotvec(rotation_vector)
    return r.as_matrix()

def rotation_angle_between_matrices(matrix1, matrix2):
    vec1 = rotation_matrix_to_vector(matrix1)
    vec2 = rotation_matrix_to_vector(matrix2)
    # Compute the angle between the two rotation vectors
    angle = np.arccos(np.dot(vec1, vec2) / (np.linalg.norm(vec1) * np.linalg.norm(vec2)))
    return np.degrees(angle)

# Example usage
if __name__ == "__main__":
    # Define two rotation matrices
    rotation_matrix1 = np.array([[0.707, -0.707, 0], [0.707, 0.707, 0], [0, 0, 1]])
    rotation_matrix2 = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]])

    # Calculate the angle between the two rotation matrices
    angle = rotation_angle_between_matrices(rotation_matrix1, rotation_matrix2)
    print("Angle between the two rotation matrices:", angle)
